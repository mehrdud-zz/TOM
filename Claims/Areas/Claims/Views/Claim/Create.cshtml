@model ModelsLayer.Claim

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/WillisMaster_CRUD.cshtml";
}

<h2>Create: Claim</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)
    @Html.Hidden("WillisEmployeeID", 1)
    @Html.Hidden("UserID", 20)


    <fieldset>

        <div class="fieldGroupContainer">
            <div class="claimFieldGroupInner">
                <h3>Details</h3>
            </div>

            <div class="panel panel-default">
                <div class="editor-label">
                    @Html.LabelFor(model => model.ClaimTemplateID)
                </div>
                <div class="editor-field">

                    @(Html.Kendo().DropDownList()
                    .Name("ClaimTemplateID")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .OptionLabel("Select field...")
                    .DataTextField("Title")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetClaimTemplates", "ClaimTemplate", new { area = "Claims" });
                        });
                    })
                    )

                    @Html.ValidationMessageFor(model => model.ClaimTemplateID)
                </div>

                @*<div class="editor-label">
                        @Html.LabelFor(model => model.UserID)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("UserID", String.Empty)
                        @Html.ValidationMessageFor(model => model.UserID)
                    </div> *@

                <div class="editor-label">
                    @Html.LabelFor(model => model.ClaimStatusID)
                </div>
                <div class="editor-field">
                    @(Html.Kendo().DropDownList()
                    .Name("ClaimStatusID")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .OptionLabel("Select field...")
                    .DataTextField("Title")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetClaimStatus", "ClaimStatus", new { area = "Claims" });
                        });
                    })
                    )
                    @Html.ValidationMessageFor(model => model.ClaimStatusID)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.CountryID)
                </div>
                <div class="editor-field">
                    @(Html.Kendo().DropDownList()
                    .Name("CountryID")
                    .HtmlAttributes(new { style = "width:100%;" })
                    .OptionLabel("Select field...")
                    .DataTextField("Title")
                    .DataValueField("Value")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetCountries", "Countries", new { area = "Claims" });
                        });
                    })
                    )
                    @Html.ValidationMessageFor(model => model.CountryID)
                </div>

                @*<div class="editor-label">
                        @Html.LabelFor(model => model.CreatedBy)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.CreatedBy)
                        @Html.ValidationMessageFor(model => model.CreatedBy)
                    </div>

                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateCreated)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.DateCreated)
                        @Html.ValidationMessageFor(model => model.DateCreated)
                    </div>*@

                <div class="editor-label">
                    @Html.LabelFor(model => model.Name)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Name)
                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
        </div>

        @if (Request.QueryString["ClaimTemplateID"] != null)
        {
            @Html.Action("FieldsListCreateFromClaimTemplate", "CustomTemplate", new { area = "Claims", ClaimTemplateID = Convert.ToInt32(Request.QueryString["ClaimTemplateID"]) })
        }
        <p>
            <input type="submit" value="Create" />
            
            <input type="button" value="Back to List" onclick="changeWindowLocation('/Claims/Claim');" />
        </p>
    </fieldset>
}
 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script type="text/javascript">
    $(document).ready(function () {
        var claimTemplateId = getParameterByName("ClaimTemplateID");
        if (claimTemplateId != null) {
            $("#ClaimTemplateID").val(claimTemplateId);
        }

        $("#ClaimTemplateID").change(function () {
            window.location = "?ClaimTemplateID=" + this.value;
        });
    });
</script>


