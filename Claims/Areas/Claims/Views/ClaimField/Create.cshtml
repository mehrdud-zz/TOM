@model ModelsLayer.ClaimField

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Home/WillisMaster_CRUD.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>ClaimFieldTemplate</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClaimTemplateID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ClaimTemplateID)
            @Html.ValidationMessageFor(model => model.ClaimTemplateID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldTypeID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FieldTypeID)
            @Html.ValidationMessageFor(model => model.FieldTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Saved)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Saved)
            @Html.ValidationMessageFor(model => model.Saved)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShortTextDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShortTextDefaultValue)
            @Html.ValidationMessageFor(model => model.ShortTextDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LongTextDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LongTextDefaultValue)
            @Html.ValidationMessageFor(model => model.LongTextDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateTimeDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateTimeDefaultValue)
            @Html.ValidationMessageFor(model => model.DateTimeDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrecncyDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CurrecncyDefaultValue)
            @Html.ValidationMessageFor(model => model.CurrecncyDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryDefaultValue)
            @Html.ValidationMessageFor(model => model.CountryDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MultiChoiceDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MultiChoiceDefaultValue)
            @Html.ValidationMessageFor(model => model.MultiChoiceDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateDefaultValue)
            @Html.ValidationMessageFor(model => model.DateDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IntegerDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IntegerDefaultValue)
            @Html.ValidationMessageFor(model => model.IntegerDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FloatDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FloatDefaultValue)
            @Html.ValidationMessageFor(model => model.FloatDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RangeDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RangeDefaultValue)
            @Html.ValidationMessageFor(model => model.RangeDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrencyID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CurrencyID)
            @Html.ValidationMessageFor(model => model.CurrencyID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryID)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>

        
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
