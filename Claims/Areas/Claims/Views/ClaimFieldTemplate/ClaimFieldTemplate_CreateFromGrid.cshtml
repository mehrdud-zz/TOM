@model ModelsLayer.ClaimFieldTemplate

@{
    ViewBag.Title = "ClaimFieldTemplate_CreateFromGrid";
    Layout = "~/Views/Home/WillisMaster_CRUD.cshtml";
}
<h1>Here!</h1>
<h2>ClaimFieldTemplate_CreateFromGrid</h2>
@using (Html.BeginForm("ClaimFieldTemplate_CreateFromGrid", "ClaimFieldTemplate", FormMethod.Post, new { @Id = "Form1" }))
{
    @Html.ValidationSummary(true)

    
      <fieldset>
        <legend>ClaimFieldTemplate</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClaimTemplateID)
        </div>
        <div class="editor-field">
            @Html.DropDownList("ClaimTemplateID")
            @Html.ValidationMessageFor(model => model.ClaimTemplateID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FieldTypeID, "FieldType")
        </div>
        <div class="editor-field">
            @Html.DropDownList("FieldTypeID", String.Empty)
            @Html.ValidationMessageFor(model => model.FieldTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code)
            @Html.ValidationMessageFor(model => model.Code)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>


             <div class="editor-label">
            @Html.LabelFor(model => model.ShortTextDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShortTextDefaultValue)
            @Html.ValidationMessageFor(model => model.ShortTextDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LongTextDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LongTextDefaultValue)
            @Html.ValidationMessageFor(model => model.LongTextDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateTimeDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateTimeDefaultValue)
            @Html.ValidationMessageFor(model => model.DateTimeDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrecncyDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CurrecncyDefaultValue)
            @Html.ValidationMessageFor(model => model.CurrecncyDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryDefaultValue)
            @Html.ValidationMessageFor(model => model.CountryDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MultiChoiceDefaultValue)
        </div>
        <div class="editor-field">
             @Html.TextAreaFor(model => model.MultiChoiceDefaultValue, 10, 55, null )
            
            @Html.ValidationMessageFor(model => model.MultiChoiceDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateDefaultValue)
            @Html.ValidationMessageFor(model => model.DateDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IntegerDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IntegerDefaultValue)
            @Html.ValidationMessageFor(model => model.IntegerDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FloatDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FloatDefaultValue)
            @Html.ValidationMessageFor(model => model.FloatDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RangeDefaultValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RangeDefaultValue)
            @Html.ValidationMessageFor(model => model.RangeDefaultValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrencyID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CurrencyID)
            @Html.ValidationMessageFor(model => model.CurrencyID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CountryID)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
