@{
    ViewBag.Title = "Index";
}

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Home/WillisMaster_CRUD.cshtml";
}

<h2>Dashboards</h2>
@model IEnumerable<ModelsLayer.PageSetup>


@* Kendo Grid implementation*@
@(Html.Kendo().Grid(Model) // Bind the grid to the Model property of the view
    .Name("Grid")
    .Columns(columns =>
        {
            columns.Template(@<text><input type="checkbox" name="rowSelector" id="rowSelector@(item.PageSetupID)" onclick="SelectRow('grid',  @item.PageSetupID);" /></text>).Width("10px").HeaderTemplate(@<text><input id="allRowsSelector" type="checkbox" onclick="SelectAllRows(this);" /></text>);
            columns.Bound(dashboard => dashboard.Name).Width(100).Template(@<text><a type="button" href="/Reports/Dashboards/Details?DashboardId=@item.PageSetupID">@item.Name</a></text>);
            columns.Template(@<text>

                <a type="button" href="/Reports/Dashboards/Details/@item.PageSetupID">View</a>&nbsp;&nbsp;&nbsp;

             
                 
                    <a type="button" href="/Reports/Dashboards/Delete/@item.PageSetupID">Delete</a>

           
            </text>).Width(100);

                })
                .Pageable(o => { o.PageSizes(new int[] { 10, 50, 100 }); })






                .ToolBar(
                toolbar =>
                {
                toolbar.Template(@<text>
                        <div class="toolbar">
                            <input type="button" value="Create new dashboard" onclick="changeWindowLocation('/Reports/Dashboards/Create');" />
                            <input type="button" value="Clear filters" onclick="changeWindowLocation('/Reports/Dashboards');" />
                        </div>
                </text>);
                })
                                    .Sortable(sortable => sortable.AllowUnsort(false))
                                    .Filterable(filterable => filterable
                                    .Extra(false)
                                    .Operators(operators => operators
                                    .ForString(str => str.Clear()
                                    .StartsWith("Starts with")
                                    .IsEqualTo("Is equal to")
                                    .IsNotEqualTo("Is not equal to")
                                    ))
                                    )

)
